{
  "entities": {
    "UserQuestion": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserQuestion",
      "type": "object",
      "description": "Represents a question asked by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user question."
        },
        "questionText": {
          "type": "string",
          "description": "The text of the question asked by the user."
        },
        "timestamp": {
          "type": "string",
          "description": "The date and time when the question was asked.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "questionText",
        "timestamp"
      ]
    },
    "GeneratedAnswer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "GeneratedAnswer",
      "type": "object",
      "description": "Represents an answer generated by the AI in response to a user question.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the generated answer."
        },
        "userQuestionId": {
          "type": "string",
          "description": "Reference to the UserQuestion that this answer corresponds to. (Relationship: UserQuestion 1:1 GeneratedAnswer)"
        },
        "answerText": {
          "type": "string",
          "description": "The text of the generated answer."
        },
        "generationTimestamp": {
          "type": "string",
          "description": "The date and time when the answer was generated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userQuestionId",
        "answerText",
        "generationTimestamp"
      ]
    },
    "WebSource": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "WebSource",
      "type": "object",
      "description": "Represents a web page used as a source for generating an answer.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the web source."
        },
        "url": {
          "type": "string",
          "description": "The URL of the web page.",
          "format": "uri"
        },
        "title": {
          "type": "string",
          "description": "The title of the web page."
        },
        "generatedAnswerIds": {
          "type": "array",
          "description": "References to GeneratedAnswers. (Relationship: GeneratedAnswer N:N WebSource)",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "url",
        "title"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}/questions/{questionId}",
        "definition": {
          "entityName": "UserQuestion",
          "schema": {
            "$ref": "#/backend/entities/UserQuestion"
          },
          "description": "Represents a question asked by a user.  Path-based ownership enforced.",
          "params": [
            {
              "name": "userId",
              "description": "The ID of the user asking the question."
            },
            {
              "name": "questionId",
              "description": "The unique ID of the user's question."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/questions/{questionId}/answers/{answerId}",
        "definition": {
          "entityName": "GeneratedAnswer",
          "schema": {
            "$ref": "#/backend/entities/GeneratedAnswer"
          },
          "description": "Represents an answer generated by the AI in response to a user question. Path-based ownership enforced.",
          "params": [
            {
              "name": "userId",
              "description": "The ID of the user to whom the question belongs."
            },
            {
              "name": "questionId",
              "description": "The ID of the question the answer is for."
            },
            {
              "name": "answerId",
              "description": "The unique ID of the generated answer."
            }
          ]
        }
      },
      {
        "path": "/web_sources/{webSourceId}",
        "definition": {
          "entityName": "WebSource",
          "schema": {
            "$ref": "#/backend/entities/WebSource"
          },
          "description": "Represents a web page used as a source for generating an answer.  Globally accessible.",
          "params": [
            {
              "name": "webSourceId",
              "description": "The unique ID of the web source."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support a chatbot application, Web Chat Navigator, focusing on answering user questions with AI-generated content sourced from the web. To ensure security, scalability, and debuggability, the structure adheres to the principles of Authorization Independence, Structural Segregation, Access Modeling, and Data Clarity.\n\n**Authorization Independence:** User questions and generated answers are stored under the user's document to implicitly enforce ownership. Since the app only requires ownership-based access control, no additional denormalization is needed.\n\n**Structural Segregation:** All documents within a collection share the same security posture. User questions and their generated answers are segregated into collections owned by each user (`/users/{userId}/questions/{questionId}` and `/users/{userId}/questions/{questionId}/answers/{answerId}`).  Web sources, not directly user-owned, are stored in a global `/web_sources` collection.\n\n**Access Modeling:** Path-based ownership is utilized for user questions and answers (`/users/{userId}/questions/{questionId}` and `/users/{userId}/questions/{questionId}/answers/{answerId}`). This simplifies the security rules, as access control is determined by the document's location in the hierarchy.  The N:N relationship between `GeneratedAnswer` and `WebSource` is managed via `generatedAnswerIds` array inside the `WebSource` document.\n\n**QAPs Support:** The structure supports secure `list` operations. Users can only list questions and answers under their own user ID, ensuring that they cannot access other users' data.  The `/web_sources` collection requires more complex security rules if create/update/delete operations need to be restricted. As it stands, there's no direct user ownership required so it is a simple collection.\n\n**Invariants:** Timestamps are included in both UserQuestion and GeneratedAnswer entities to maintain data integrity and track creation and generation times. The `userQuestionId` field in `GeneratedAnswer` maintains the relationship between questions and answers."
  }
}