rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin.
    // This function checks for the existence of the user's UID in the /admins collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can get any single user document and list all users.
      allow get, list: if isAdmin();
      
      // A user can create their own user document and read their own document.
      // This is crucial for sign-up and for a user to view their own profile info.
      allow create, read: if request.auth.uid == userId;
    }

    // Rules for the 'admins' collection
    match /admins/{userId} {
      // Admins can get any single admin document and list all admins.
      // This is necessary for the admin dashboard to function correctly.
      allow get, list: if isAdmin();

      // Any authenticated user can attempt to read their OWN document in the admins collection.
      // This is required for the `isAdmin()` check to work without permission errors for non-admins.
      // The `||` combines this with the admin rule above.
      allow get: if request.auth.uid == userId;
    }
    
    // Rules for the 'activity_logs' collection
    match /activity_logs/{logId} {
        // Admins can get and list all activity logs.
        allow get, list: if isAdmin();
        
        // Any authenticated user can create an activity log.
        // This is needed for logging sign-ups and logins.
        allow create: if request.auth != null;
    }

    // Rules for user-specific chats and messages
    match /users/{userId}/chats/{chatId} {
      // A user can perform any action (create, read, update, delete) on chats that belong to them.
      allow read, write: if request.auth.uid == userId;

      // This nested match applies to the messages subcollection.
      match /messages/{messageId} {
        // A user can perform any action on messages within their own chats.
        allow read, write: if request.auth.uid == userId;
      }
    }
  }
}
